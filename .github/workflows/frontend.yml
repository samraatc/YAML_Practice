name: CI_CD_Pipeline Frontend

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  CI_push:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    environment: Production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with: 
          node-version: '21'

      - name: Install dependencies
        run: npm install

      - name: Create .env file
        run: |
          echo "VITE_API_URL=${{ secrets.BACKEND_API }}" > .env

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Build project with Vercel
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: vercel-output
          path: frontend/.vercel/output

  CD_Push:
    needs: CI_push
    if: github.event_name == 'push' && needs.CI_push.result == 'success'
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: vercel-output
          path: frontend/.vercel/output

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy to Vercel
        run: |
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} --yes
        working-directory: frontend